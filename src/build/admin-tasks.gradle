apply plugin: 'maven'

task wrapper(type: Wrapper) {
    group = 'Admin'
    description = "Generates gradlew and gradlew.bat bootstrap scripts"
    gradleVersion = '0.9.2'
    // place jar file and properties into a subdir to avoid root dir clutter
    jarFile = 'src/build/gradle-wrapper.jar'
}

task generatePom {
    group = 'Admin'
    description = 'Generates a Maven POM file suitable for use in building the project'

    build.dependsOn generatePom

    doLast() {
        pom {
            project {
                name = project.description
                properties {
                    setProperty('project.build.sourceEncoding', 'UTF8')
                }
                build {
                    plugins {
                        plugin {
                            groupId = 'org.apache.maven.plugins'
                            artifactId = 'maven-compiler-plugin'
                            configuration {
                                source = '1.6'
                                target = '1.6'
                            }
                        }
                        plugin {
                            groupId = 'org.apache.maven.plugins'
                            artifactId = 'maven-surefire-plugin'
                            configuration { includes { include = '**/*Tests.java' } }
                        }
                    }
                    sourceDirectory = 'src/main'
                    testSourceDirectory = 'src/test'
                    resources { resource { directory = 'src/main' } }
                    testResources { testResource { directory = 'src/test' } }
                }
                repositories {
                    repository {
                        id = 'springsource-milestone'
                        name = 'Spring Framework Milestone Repository'
                        url = 'http://maven.springframework.org/milestone'
                        snapshots { enabled = false }
                    }
                }
            }
        }.writeTo('pom.xml')
    }
}
